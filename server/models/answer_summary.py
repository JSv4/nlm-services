from server import util
from server.models.base_model_ import Model


class AnswerSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        page_idx: int = None,
        block_idx: float = None,
        block_type: str = None,
        phrase: str = None,
        header_text: str = None,
    ):  # noqa: E501
        """AnswerSummary - a model defined in Swagger

        :param page_idx: The page_idx of this AnswerSummary.  # noqa: E501
        :type page_idx: int
        :param block_idx: The block_idx of this AnswerSummary.  # noqa: E501
        :type block_idx: float
        :param block_type: The block_type of this AnswerSummary.  # noqa: E501
        :type block_type: str
        :param phrase: The phrase of this AnswerSummary.  # noqa: E501
        :type phrase: str
        :param header_text: The header_text of this AnswerSummary.  # noqa: E501
        :type header_text: str
        """
        self.swagger_types = {
            "page_idx": int,
            "block_idx": float,
            "block_type": str,
            "phrase": str,
            "header_text": str,
        }

        self.attribute_map = {
            "page_idx": "pageIdx",
            "block_idx": "blockIdx",
            "block_type": "blockType",
            "phrase": "phrase",
            "header_text": "header_text",
        }
        self._page_idx = page_idx
        self._block_idx = block_idx
        self._block_type = block_type
        self._phrase = phrase
        self._header_text = header_text

    @classmethod
    def from_dict(cls, dikt) -> "AnswerSummary":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnswerSummary of this AnswerSummary.  # noqa: E501
        :rtype: AnswerSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_idx(self) -> int:
        """Gets the page_idx of this AnswerSummary.


        :return: The page_idx of this AnswerSummary.
        :rtype: int
        """
        return self._page_idx

    @page_idx.setter
    def page_idx(self, page_idx: int):
        """Sets the page_idx of this AnswerSummary.


        :param page_idx: The page_idx of this AnswerSummary.
        :type page_idx: int
        """

        self._page_idx = page_idx

    @property
    def block_idx(self) -> float:
        """Gets the block_idx of this AnswerSummary.


        :return: The block_idx of this AnswerSummary.
        :rtype: float
        """
        return self._block_idx

    @block_idx.setter
    def block_idx(self, block_idx: float):
        """Sets the block_idx of this AnswerSummary.


        :param block_idx: The block_idx of this AnswerSummary.
        :type block_idx: float
        """

        self._block_idx = block_idx

    @property
    def block_type(self) -> str:
        """Gets the block_type of this AnswerSummary.


        :return: The block_type of this AnswerSummary.
        :rtype: str
        """
        return self._block_type

    @block_type.setter
    def block_type(self, block_type: str):
        """Sets the block_type of this AnswerSummary.


        :param block_type: The block_type of this AnswerSummary.
        :type block_type: str
        """

        self._block_type = block_type

    @property
    def phrase(self) -> str:
        """Gets the phrase of this AnswerSummary.


        :return: The phrase of this AnswerSummary.
        :rtype: str
        """
        return self._phrase

    @phrase.setter
    def phrase(self, phrase: str):
        """Sets the phrase of this AnswerSummary.


        :param phrase: The phrase of this AnswerSummary.
        :type phrase: str
        """

        self._phrase = phrase

    @property
    def header_text(self) -> str:
        """Gets the header_text of this AnswerSummary.


        :return: The header_text of this AnswerSummary.
        :rtype: str
        """
        return self._header_text

    @header_text.setter
    def header_text(self, header_text: str):
        """Sets the header_text of this AnswerSummary.


        :param header_text: The header_text of this AnswerSummary.
        :type header_text: str
        """

        self._header_text = header_text
