from datetime import datetime

from server import util
from server.models.base_model_ import Model


class Prompt(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: str = None,
        user_id: str = None,
        doc_id: str = None,
        workspace_id: str = None,
        query_scope: str = None,
        prompt_type: str = None,
        title: str = None,
        subtitle: str = None,
        timestamp: datetime = None,
        search_criteria: object = None,
        **kwargs,
    ):  # noqa: E501
        """Prompt - a model defined in Swagger

        :param id: The id of this Prompt.  # noqa: E501
        :type id: str
        :param user_id: The user_id of this Prompt.  # noqa: E501
        :type user_id: str
        :param doc_id: The doc_id of this Prompt.  # noqa: E501
        :type doc_id: str
        :param workspace_id: The workspace_id of this Prompt.  # noqa: E501
        :type workspace_id: str
        :param query_scope: The query_scope of this Prompt.  # noqa: E501
        :type query_scope: str
        :param prompt_type: The prompt_type of this Prompt.  # noqa: E501
        :type prompt_type: str
        :param title: The title of this Prompt.  # noqa: E501
        :type title: str
        :param subtitle: The subtitle of this Prompt.  # noqa: E501
        :type subtitle: str
        :param timestamp: The timestamp of this Prompt.  # noqa: E501
        :type timestamp: datetime
        :param search_criteria: The timestamp of this Prompt.  # noqa: E501
        :type search_criteria: object
        """
        self.swagger_types = {
            "id": str,
            "doc_id": str,
            "workspace_id": str,
            "query_scope": str,
            "prompt_type": str,
            "title": str,
            "subtitle": str,
            "search_criteria": object,
        }

        self.attribute_map = {
            "id": "id",
            "doc_id": "docId",
            "workspace_id": "workspaceId",
            "query_scope": "queryScope",
            "prompt_type": "promptType",
            "title": "title",
            "subtitle": "subtitle",
            "search_criteria": "searchCriteria",
        }

        self._id = id
        self._user_id = user_id
        self._doc_id = doc_id or ""
        self._workspace_id = workspace_id
        self._query_scope = query_scope or "workspace"
        self._prompt_type = prompt_type or "public"
        self._title = title or ""
        self._subtitle = subtitle or ""
        self._timestamp = timestamp
        self._search_criteria = search_criteria

    @classmethod
    def from_dict(cls, dikt) -> "Prompt":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Prompt of this Prompt.  # noqa: E501
        :rtype: Prompt
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Prompt.


        :return: The id of this Prompt.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Prompt.


        :param id: The id of this Prompt.
        :type id: str
        """

        self._id = id

    @property
    def user_id(self) -> str:
        """Gets the user_id of this Prompt.


        :return: The user_id of this Prompt.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this Prompt.


        :param user_id: The user_id of this Prompt.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def doc_id(self) -> str:
        """Gets the doc_id of this Prompt.


        :return: The doc_id of this Prompt.
        :rtype: str
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id: str):
        """Sets the doc_id of this Prompt.


        :param doc_id: The doc_id of this Prompt.
        :type doc_id: str
        """

        self._doc_id = doc_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this Prompt.


        :return: The workspace_id of this Prompt.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this Prompt.


        :param workspace_id: The workspace_id of this Prompt.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def query_scope(self) -> str:
        """Gets the query_scope of this Prompt.


        :return: The query_scope of this Prompt.
        :rtype: str
        """
        return self._query_scope

    @query_scope.setter
    def query_scope(self, query_scope: str):
        """Sets the query_scope of this Prompt.


        :param query_scope: The query_scope of this Prompt.
        :type query_scope: str
        """

        self._query_scope = query_scope

    @property
    def prompt_type(self) -> str:
        """Gets the prompt_type of this Prompt.


        :return: The prompt_type of this Prompt.
        :rtype: str
        """
        return self._prompt_type

    @prompt_type.setter
    def prompt_type(self, prompt_type: str):
        """Sets the prompt_type of this Prompt.


        :param prompt_type: The prompt_type of this Prompt.
        :type prompt_type: str
        """

        self._prompt_type = prompt_type

    @property
    def title(self) -> str:
        """Gets the title of this Prompt.


        :return: The title of this Prompt.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Prompt.


        :param title: The title of this Prompt.
        :type title: str
        """

        self._title = title

    @property
    def subtitle(self) -> str:
        """Gets the subtitle of this Prompt.


        :return: The subtitle of this Prompt.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle: str):
        """Sets the subtitle of this Prompt.


        :param subtitle: The subtitle of this Prompt.
        :type subtitle: str
        """

        self._subtitle = subtitle

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this Prompt.


        :return: The timestamp of this Prompt.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this Prompt.


        :param timestamp: The timestamp of this Prompt.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def search_criteria(self) -> object:
        """Gets the search_criteria of this Prompt.


        :return: The search_criteria of this Prompt.
        :rtype: object
        """
        return self._search_criteria

    @search_criteria.setter
    def search_criteria(self, search_criteria: object):
        """Sets the search_criteria of this Prompt.


        :param search_criteria: The search_criteria of this Prompt.
        :type search_criteria: object
        """

        self._search_criteria = search_criteria
