from datetime import datetime  # noqa: F401

from server import util
from server.models.base_model_ import Model


class Notifications(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: str = None,
        user_id: str = None,
        is_read: bool = None,
        notify_action: str = None,
        created_on: datetime = None,
        notify_params: object = None,
        **kwargs,
    ):  # noqa: E501
        """Notifications - a model defined in Swagger

        :param id: The id of this Notifications.  # noqa: E501
        :type id: str
        :param user_id: The user_id of this Notifications.  # noqa: E501
        :type user_id: str
        :param is_read: The is_read of this Notifications.  # noqa: E501
        :type is_read: bool
        :param notify_action: The notify_action of this Notifications.  # noqa: E501
        :type notify_action: str
        :param created_on: The created_on of this Notifications.  # noqa: E501
        :type created_on: datetime
        :param notify_params: The notify_params of this Notifications.  # noqa: E501
        :type notify_params: object
        """
        self.swagger_types = {
            "id": str,
            "user_id": str,
            "is_read": bool,
            "notify_action": str,
            "created_on": datetime,
            "notify_params": object,
        }

        self.attribute_map = {
            "id": "_id",
            "user_id": "user_id",
            "is_read": "is_read",
            "notify_action": "notify_action",
            "created_on": "created_on",
            "notify_params": "notify_params",
        }
        self._id = id
        self._user_id = user_id
        self._is_read = is_read
        self._notify_action = notify_action
        self._created_on = created_on
        self._notify_params = notify_params

    @classmethod
    def from_dict(cls, dikt) -> "Notifications":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notifications of this Notifications.  # noqa: E501
        :rtype: Notifications
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Notifications.


        :return: The id of this Notifications.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Notifications.


        :param id: The id of this Notifications.
        :type id: str
        """

        self._id = id

    @property
    def user_id(self) -> str:
        """Gets the user_id of this Notifications.


        :return: The user_id of this Notifications.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this Notifications.


        :param user_id: The user_id of this Notifications.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def is_read(self) -> bool:
        """Gets the is_read of this Notifications.


        :return: The is_read of this Notifications.
        :rtype: bool
        """
        return self._is_read

    @is_read.setter
    def is_read(self, is_read: bool):
        """Sets the is_read of this Notifications.


        :param is_read: The is_read of this Notifications.
        :type is_read: bool
        """

        self._is_read = is_read

    @property
    def notify_action(self) -> str:
        """Gets the notify_action of this Notifications.


        :return: The notify_action of this Notifications.
        :rtype: str
        """
        return self._notify_action

    @notify_action.setter
    def notify_action(self, notify_action: str):
        """Sets the notify_action of this Notifications.


        :param notify_action: The notify_action of this Notifications.
        :type notify_action: str
        """

        self._notify_action = notify_action

    @property
    def created_on(self) -> datetime:
        """Gets the created_on of this Notifications.


        :return: The created_on of this Notifications.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on: datetime):
        """Sets the created_on of this Notifications.


        :param created_on: The created_on of this Notifications.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def notify_params(self) -> object:
        """Gets the notify_params of this Notifications.


        :return: The notify_params of this Notifications.
        :rtype: object
        """
        return self._notify_params

    @notify_params.setter
    def notify_params(self, notify_params: object):
        """Sets the notify_params of this Notifications.


        :param notify_params: The notify_params of this Notifications.
        :type notify_params: object
        """

        self._notify_params = notify_params
