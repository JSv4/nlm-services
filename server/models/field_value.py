from typing import List

from server import util
from server.models.base_model_ import Model


class FieldValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: str = None,
        field_id: str = None,
        selected_row: object = None,
        doc_id: str = None,
        workspace_id: str = None,
        field_bundle_id: str = None,
        history: List[object] = None,
        doc_name: str = None,
    ):  # noqa: E501
        """FieldValue - a model defined in Swagger

        :param id: The id of this FieldValue.  # noqa: E501
        :type id: str
        :param field_id: The field_id of this FieldValue.  # noqa: E501
        :type field_id: str
        :param selected_row: The selected_row of this FieldValue.  # noqa: E501
        :type selected_row: object
        :param doc_id: The doc_id of this FieldValue.  # noqa: E501
        :type doc_id: str
        :param workspace_id: The workspace_id of this FieldValue.  # noqa: E501
        :type workspace_id: str
        :param field_bundle_id: The field_bundle_id of this FieldValue.  # noqa: E501
        :type field_bundle_id: str
        :param history: The history of this FieldValue.  # noqa: E501
        :type history: List[object]
        :param doc_name: The doc_name of this FieldValue.  # noqa: E501
        :type doc_name: str
        """
        self.swagger_types = {
            "id": str,
            "doc_id": str,
            "workspace_id": str,
            "field_bundle_id": str,
            "field_id": str,
            "selected_row": object,
            "history": List[object],
            "doc_name": str,
        }

        self.attribute_map = {
            "id": "id",
            "doc_id": "docId",
            "workspace_id": "workspaceId",
            "field_bundle_id": "fieldBundleId",
            "field_id": "fieldId",
            "selected_row": "selectedRow",
            "history": "history",
            "doc_name": "docName",
        }
        self._id = id
        self._field_id = field_id
        self._selected_row = selected_row
        self._doc_id = doc_id
        self._workspace_id = workspace_id
        self._field_bundle_id = field_bundle_id
        self._history = history
        self._doc_name = doc_name

    @classmethod
    def from_dict(cls, dikt) -> "FieldValue":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FieldValue of this FieldValue.  # noqa: E501
        :rtype: FieldValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this FieldValue.


        :return: The id of this FieldValue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this FieldValue.


        :param id: The id of this FieldValue.
        :type id: str
        """

        self._id = id

    @property
    def field_id(self) -> str:
        """Gets the field_id of this FieldValue.


        :return: The field_id of this FieldValue.
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id: str):
        """Sets the field_id of this FieldValue.


        :param field_id: The field_id of this FieldValue.
        :type field_id: str
        """

        self._field_id = field_id

    @property
    def selected_row(self) -> object:
        """Gets the selected_row of this FieldValue.


        :return: The selected_row of this FieldValue.
        :rtype: object
        """
        return self._selected_row

    @selected_row.setter
    def selected_row(self, selected_row: object):
        """Sets the selected_row of this FieldValue.


        :param selected_row: The selected_row of this FieldValue.
        :type selected_row: object
        """

        self._selected_row = selected_row

    @property
    def doc_id(self) -> str:
        """Gets the doc_id of this FieldValue.


        :return: The doc_id of this FieldValue.
        :rtype: str
        """
        return self._doc_id

    @doc_id.setter
    def doc_id(self, doc_id: str):
        """Sets the doc_id of this FieldValue.


        :param doc_id: The doc_id of this FieldValue.
        :type doc_id: str
        """

        self._doc_id = doc_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this FieldValue.


        :return: The workspace_id of this FieldValue.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this FieldValue.


        :param workspace_id: The workspace_id of this FieldValue.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def field_bundle_id(self) -> str:
        """Gets the workspace_id of this FieldValue.


        :return: The workspace_id of this FieldValue.
        :rtype: str
        """
        return self._field_bundle_id

    @field_bundle_id.setter
    def field_bundle_id(self, field_bundle_id: str):
        """Sets the workspace_id of this FieldValue.


        :param field_bundle_id: The workspace_id of this FieldValue.
        :type field_bundle_id: str
        """

        self._field_bundle_id = field_bundle_id

    @property
    def history(self) -> List[object]:
        """Gets the history of this FieldValue.


        :return: The history of this FieldValue.
        :rtype: List[object]
        """
        return self._history

    @history.setter
    def history(self, history: List[object]):
        """Sets the history of this FieldValue.


        :param history: The history of this FieldValue.
        :type history: List[object]
        """

        self._history = history

    @property
    def doc_name(self) -> str:
        """Gets the doc_name of this FieldValue.


        :return: The doc_name of this FieldValue.
        :rtype: str
        """
        return self._doc_name

    @doc_name.setter
    def doc_name(self, doc_name: str):
        """Sets the doc_name of this FieldValue.


        :param doc_name: The doc_name of this FieldValue.
        :type doc_name: str
        """

        self._doc_name = doc_name
