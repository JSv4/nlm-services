from server import util
from server.models.base_model_ import Model


class AuditFv(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        doc_name: str = None,
        self_entered_cnt: str = None,
        overriden_cnt: str = None,
        total_edits: str = None,
        pct_entered: str = None,
        pct_overriden: str = None,
        pct_total: str = None,
    ):  # noqa: E501
        """AuditFv - a model defined in Swagger

        :param doc_name: The doc_name of this WorkspaceId.  # noqa: E501
        :type doc_name: str
        :param self_entered_cnt: The self_entered_cnt of this WorkspaceId.  # noqa: E501
        :type self_entered_cnt: str
        :param overriden_cnt: The overriden_cnt of this WorkspaceId.  # noqa: E501
        :type overriden_cnt: str
        :param total_edits: The total_edits of this WorkspaceId.  # noqa: E501
        :type total_edits: str
        :param pct_entered: The pct_entered of this WorkspaceId.  # noqa: E501
        :type pct_entered: str
        :param pct_overriden: The pct_overriden of this WorkspaceId.  # noqa: E501
        :type pct_overriden: str
        :param pct_total: The pct_total of this WorkspaceId.  # noqa: E501
        :type pct_total: str
        """
        self.swagger_types = {
            "doc_name": str,
            "self_entered_cnt": str,
            "overriden_cnt": str,
            "total_edits": str,
            "pct_entered": str,
            "pct_overriden": str,
            "pct_total": str,
        }

        self.attribute_map = {
            "doc_name": "docName",
            "self_entered_cnt": "selfEnteredCnt",
            "overriden_cnt": "overridenCnt",
            "total_edits": "totalEdits",
            "pct_entered": "pctEntered",
            "pct_overriden": "pctOverriden",
            "pct_total": "pctTotal",
        }

        self._doc_name = doc_name
        self._self_entered_cnt = self_entered_cnt
        self._overriden_cnt = overriden_cnt
        self._total_edits = total_edits
        self._pct_entered = pct_entered
        self._pct_overriden = pct_overriden
        self._pct_total = pct_total

    @classmethod
    def from_dict(cls, dikt) -> "AuditFv":
        """Returns the dict as a model
        :param dikt: A dict.
        :type: dict
        :return: The AuditFV of this WorkspaceId.  # noqa: E501
        :rtype: AuditFV
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doc_name(self) -> str:
        """Gets the doc_name of this WorkspaceId.
        :return: The doc_name of this WorkspaceId.
        :rtype: str
        """
        return self._doc_name

    @doc_name.setter
    def doc_name(self, doc_name: str):
        """Sets the doc_name of this WorkspaceId.
        :param doc_name: The doc_name of this WorkspaceId.
        :type doc_name: str
        """
        self._doc_name = doc_name

    @property
    def self_entered_cnt(self) -> str:
        """Gets the self_entered_cnt of this WorkspaceId.
        :return: The self_entered_cnt of this WorkspaceId.
        :rtype: str
        """
        return self._self_entered_cnt

    @self_entered_cnt.setter
    def self_entered_cnt(self, self_entered_cnt: str):
        """Sets the self_entered_cnt of this WorkspaceId.
        :param self_entered_cnt: The self_entered_cnt of this WorkspaceId.
        :type self_entered_cnt: str
        """
        self._self_entered_cnt = self_entered_cnt

    @property
    def overriden_cnt(self) -> str:
        """Gets the overriden_cnt of this WorkspaceId.
        :return: The overriden_cnt of this WorkspaceId.
        :rtype: str
        """
        return self._overriden_cnt

    @overriden_cnt.setter
    def overriden_cnt(self, overriden_cnt: str):
        """Sets the overriden_cnt of this WorkspaceId.
        :param overriden_cnt: The overriden_cnt of this WorkspaceId.
        :type overriden_cnt: str
        """
        self._overriden_cnt = overriden_cnt

    @property
    def total_edits(self) -> str:
        """Gets the total_edits of this WorkspaceId.
        :return: The total_edits of this WorkspaceId.
        :rtype: str
        """
        return self._total_edits

    @total_edits.setter
    def total_edits(self, total_edits: str):
        """Sets the total_edits of this WorkspaceId.
        :param total_edits: The total_edits of this WorkspaceId.
        :type total_edits: str
        """
        self._total_edits = total_edits

    @property
    def pct_entered(self) -> str:
        """Gets the pct_entered of this WorkspaceId.
        :return: The pct_entered of this WorkspaceId.
        :rtype: str
        """
        return self._pct_entered

    @pct_entered.setter
    def pct_entered(self, pct_entered: str):
        """Sets the pct_entered of this WorkspaceId.
        :param pct_entered: The pct_entered of this WorkspaceId.
        :type pct_entered: str
        """
        self._pct_entered = pct_entered

    @property
    def pct_overriden(self) -> str:
        """Gets the pct_overriden of this WorkspaceId.
        :return: The pct_overriden of this WorkspaceId.
        :rtype: str
        """
        return self._pct_overriden

    @pct_overriden.setter
    def pct_overriden(self, pct_overriden: str):
        """Sets the pct_overriden of this WorkspaceId.
        :param pct_overriden: The pct_overriden of this WorkspaceId.
        :type pct_overriden: str
        """
        self._pct_overriden = pct_overriden

    @property
    def pct_total(self) -> str:
        """Gets the pct_total of this WorkspaceId.
        :return: The pct_total of this WorkspaceId.
        :rtype: str
        """
        return self._pct_total

    @pct_total.setter
    def pct_total(self, pct_total: str):
        """Sets the pct_total of this WorkspaceId.
        :param pct_total: The pct_total of this WorkspaceId.
        :type pct_total: str
        """
        self._pct_total = pct_total
