from typing import List

from server import util
from server.models.base_model_ import Model
from server.models.search_criteria import SearchCriteria  # noqa: F401,E501


class Field(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: str = None,
        name: str = None,
        active: bool = True,
        user_id: str = None,
        workspace_id: str = None,
        is_user_defined: bool = True,
        is_entered_field: bool = False,
        parent_bundle_id: str = None,
        data_type: str = None,
        options: object = None,
        status: object = None,
        search_criteria: SearchCriteria = None,
        distinct_values: List[str] = None,
        is_dependent_field: bool = False,
        **kwargs,
    ):  # noqa: E501
        """Field - a model defined in Swagger

        :param id: The id of this Field.  # noqa: E501
        :type id: str
        :param name: The name of this Field.  # noqa: E501
        :type name: str
        :param active: The active of this Field.  # noqa: E501
        :type active: bool
        :param user_id: The user_id of this Field.  # noqa: E501
        :type user_id: str
        :param workspace_id: The workspace_id of this Field.  # noqa: E501
        :type workspace_id: str
        :param is_user_defined: The is_user_defined of this Field.  # noqa: E501
        :type is_user_defined: bool
        :param is_entered_field: The is_entered_field of this Field.  # noqa: E501
        :type is_entered_field: bool
        :param parent_bundle_id: The parent_bundle_id of this Field.  # noqa: E501
        :type parent_bundle_id: str
        :param data_type: The data_type of this Field.  # noqa: E501
        :type data_type: str
        :param options: The options of this Field.  # noqa: E501
        :type options: object
        :param status: The status of this Field.  # noqa: E501
        :type status: object
        :param search_criteria: The search_criteria of this Field.  # noqa: E501
        :type search_criteria: SearchCriteria
        :param distinct_values: The distinct_values of this Field.  # noqa: E501
        :type distinct_values: List of distinct_values for this field taken from field value
        :param is_dependent_field: The is_dependent_field of this Field.  # noqa: E501
        :type is_dependent_field: bool
        """
        self.swagger_types = {
            "id": str,
            "name": str,
            "active": bool,
            "user_id": str,
            "workspace_id": str,
            "is_user_defined": bool,
            "is_entered_field": bool,
            "parent_bundle_id": str,
            "data_type": str,
            "options": object,
            "status": object,
            "search_criteria": SearchCriteria,
            "distinct_values": List[str],
            "is_dependent_field": bool,
        }

        self.attribute_map = {
            "id": "id",
            "name": "name",
            "active": "active",
            "user_id": "userId",
            "workspace_id": "workspaceId",
            "is_user_defined": "isUserDefined",
            "is_entered_field": "isEnteredField",
            "parent_bundle_id": "parentBundleId",
            "data_type": "dataType",
            "options": "options",
            "status": "status",
            "search_criteria": "searchCriteria",
            "distinct_values": "distinctValues",
            "is_dependent_field": "isDependentField",
        }

        self._id = id
        self._name = name
        self._active = active
        self._user_id = user_id
        self._workspace_id = workspace_id
        self._is_user_defined = is_user_defined
        self._is_entered_field = is_entered_field
        self._parent_bundle_id = parent_bundle_id
        self._data_type = data_type
        self._options = options or {}
        self._status = status
        self._search_criteria = search_criteria
        self._distinct_values = distinct_values or []
        self._is_dependent_field = is_dependent_field or False

    @classmethod
    def from_dict(cls, dikt) -> "Field":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Field of this Field.  # noqa: E501
        :rtype: Field
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Field.


        :return: The id of this Field.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Field.


        :param id: The id of this Field.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Field.


        :return: The name of this Field.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Field.


        :param name: The name of this Field.
        :type name: str
        """

        self._name = name

    @property
    def active(self) -> bool:
        """Gets the active of this Field.


        :return: The active of this Field.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this Field.


        :param active: The active of this Field.
        :type active: bool
        """

        self._active = active

    @property
    def user_id(self) -> str:
        """Gets the user_id of this Field.


        :return: The user_id of this Field.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this Field.


        :param user_id: The user_id of this Field.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this Field.


        :return: The workspace_id of this Field.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this Field.


        :param workspace_id: The workspace_id of this Field.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def is_user_defined(self) -> bool:
        """Gets the is_user_defined of this Field.


        :return: The is_user_defined of this Field.
        :rtype: bool
        """
        return self._is_user_defined

    @is_user_defined.setter
    def is_user_defined(self, is_user_defined: bool):
        """Sets the is_user_defined of this Field.


        :param is_user_defined: The is_user_defined of this Field.
        :type is_user_defined: bool
        """

        self._is_user_defined = is_user_defined

    @property
    def is_entered_field(self) -> bool:
        """Gets the is_entered_field of this Field.


        :return: The is_entered_field of this Field.
        :rtype: bool
        """
        return self._is_entered_field

    @is_entered_field.setter
    def is_entered_field(self, is_entered_field: bool):
        """Sets the is_entered_field of this Field.


        :param is_entered_field: The is_entered_field of this Field.
        :type is_entered_field: bool
        """

        self._is_entered_field = is_entered_field

    @property
    def parent_bundle_id(self) -> str:
        """Gets the parent_bundle_id of this Field.


        :return: The parent_bundle_id of this Field.
        :rtype: str
        """
        return self._parent_bundle_id

    @parent_bundle_id.setter
    def parent_bundle_id(self, parent_bundle_id: str):
        """Sets the parent_bundle_id of this Field.


        :param parent_bundle_id: The parent_bundle_id of this Field.
        :type parent_bundle_id: str
        """

        self._parent_bundle_id = parent_bundle_id

    @property
    def data_type(self) -> str:
        """Gets the data_type of this Field.


        :return: The data_type of this Field.
        :rtype: str
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type: str):
        """Sets the data_type of this Field.


        :param data_type: The data_type of this Field.
        :type data_type: str
        """

        self._data_type = data_type

    @property
    def options(self) -> object:
        """Gets the options of this Field.


        :return: The options of this Field.
        :rtype: object
        """
        return self._options

    @options.setter
    def options(self, options: object):
        """Sets the options of this Field.


        :param options: The options of this Field.
        :type options: object
        """

        self._options = options

    @property
    def status(self) -> object:
        """Gets the status of this Field.


        :return: The status of this Field.
        :rtype: object
        """
        return self._status

    @status.setter
    def status(self, status: object):
        """Sets the status of this Field.


        :param status: The status of this Field.
        :type status: object
        """

        self._status = status

    @property
    def search_criteria(self) -> SearchCriteria:
        """Gets the search_criteria of this SearchCriteria.
        :return: The search_criteria of this SearchCriteria.
        :rtype: SearchCriteria
        """

        if isinstance(self._search_criteria, dict):
            self._search_criteria = SearchCriteria(**self._search_criteria)
        return self._search_criteria

    @search_criteria.setter
    def search_criteria(self, search_criteria: SearchCriteria):
        """Sets the search_criteria of this SearchCriteria.
        :param search_criteria: The search_criteria of this SearchCriteria.
        :type search_criteria: SearchCriteria
        """

        if isinstance(search_criteria, dict):
            search_criteria = SearchCriteria(**search_criteria)
        self._search_criteria = search_criteria

    @property
    def distinct_values(self) -> List[str]:
        """Gets the distinct_values of this field.
        :return: The distinct_values of this field.
        :rtype: List
        """

        return self._distinct_values

    @distinct_values.setter
    def distinct_values(self, distinct_values: List[str]):
        """Sets the distinct_values of this Field.
        :param distinct_values: The distinct_values of this Field.
        :type distinct_values: List
        """

        self._distinct_values = distinct_values

    @property
    def is_dependent_field(self) -> bool:
        """Gets the is_dependent_field of this Field.


        :return: The is_dependent_field of this Field.
        :rtype: bool
        """
        return self._is_dependent_field

    @is_dependent_field.setter
    def is_dependent_field(self, is_dependent_field: bool):
        """Sets the is_dependent_field of this Field.


        :param is_dependent_field: The is_dependent_field of this Field.
        :type is_dependent_field: bool
        """

        self._is_dependent_field = is_dependent_field
