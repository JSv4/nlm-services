from datetime import datetime
from typing import List

from server import util
from server.models.base_model_ import Model


class FieldBundle(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        bundle_name: str = None,
        id: str = None,
        created_on: datetime = None,
        parent_bundle_id: str = None,
        user_id: str = None,
        workspace_id: str = None,
        active: bool = None,
        cached_file: str = None,
        bundle_type: str = None,
        tags: List[str] = None,
        field_ids: List[str] = None,
        workspace_filter_ids: List[str] = None,
        **kwargs,
    ):  # noqa: E501
        """FieldBundle - a model defined in Swagger

        :param bundle_name: The bundle_name of this FieldBundle.  # noqa: E501
        :type bundle_name: str
        :param id: The id of this FieldBundle.  # noqa: E501
        :type id: str
        :param created_on: The created_on of this FieldBundle.  # noqa: E501
        :type created_on: datetime
        :param parent_bundle_id: The parent_bundle_id of this FieldBundle.  # noqa: E501
        :type parent_bundle_id: str
        :param user_id: The user_id of this FieldBundle.  # noqa: E501
        :type user_id: str
        :param workspace_id: The workspace_id of this FieldBundle.  # noqa: E501
        :type workspace_id: str
        :param active: The active of this FieldBundle.  # noqa: E501
        :type active: bool
        :param cached_file: The cached_file of this FieldBundle.  # noqa: E501
        :type cached_file: str
        :param bundle_type: The bundle_type of this FieldBundle.  # noqa: E501
        :type bundle_type: str
        :param tags: The tags of this FieldBundle.  # noqa: E501
        :type tags: List[str]
        :param field_ids: The field_ids of this FieldBundle.  # noqa: E501
        :type field_ids: List[str]
        :param workspace_filter_ids: The workspace_filter_ids of this FieldBundle.  # noqa: E501
        :type workspace_filter_ids: List[str]
        """
        self.swagger_types = {
            "bundle_name": str,
            "id": str,
            "created_on": datetime,
            "parent_bundle_id": str,
            "user_id": str,
            "workspace_id": str,
            "active": bool,
            "cached_file": str,
            "bundle_type": str,
            "tags": List[str],
            "field_ids": List[str],
            "workspace_filter_ids": List[str],
        }

        self.attribute_map = {
            "bundle_name": "bundleName",
            "id": "id",
            "created_on": "createdOn",
            "parent_bundle_id": "parentBundleId",
            "user_id": "userId",
            "workspace_id": "workspaceId",
            "active": "active",
            "cached_file": "cachedFile",
            "bundle_type": "bundleType",
            "tags": "tags",
            "field_ids": "fieldIds",
            "workspace_filter_ids": "workspaceFilterIds",
        }

        self._bundle_name = bundle_name
        self._id = id
        self._created_on = created_on
        self._parent_bundle_id = parent_bundle_id
        self._user_id = user_id
        self._workspace_id = workspace_id
        self._active = active
        self._cached_file = cached_file
        self._bundle_type = bundle_type or "PRIVATE"
        self._tags = tags or []
        self._field_ids = field_ids or []
        self._workspace_filter_ids = workspace_filter_ids or []

    @classmethod
    def from_dict(cls, dikt) -> "FieldBundle":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FieldBundle of this FieldBundle.  # noqa: E501
        :rtype: FieldBundle
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_name(self) -> str:
        """Gets the bundle_name of this FieldBundle.


        :return: The bundle_name of this FieldBundle.
        :rtype: str
        """
        return self._bundle_name

    @bundle_name.setter
    def bundle_name(self, bundle_name: str):
        """Sets the bundle_name of this FieldBundle.


        :param bundle_name: The bundle_name of this FieldBundle.
        :type bundle_name: str
        """

        self._bundle_name = bundle_name

    @property
    def id(self) -> str:
        """Gets the id of this FieldBundle.


        :return: The id of this FieldBundle.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this FieldBundle.


        :param id: The id of this FieldBundle.
        :type id: str
        """

        self._id = id

    @property
    def created_on(self) -> datetime:
        """Gets the created_on of this FieldBundle.


        :return: The created_on of this FieldBundle.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on: datetime):
        """Sets the created_on of this FieldBundle.


        :param created_on: The created_on of this FieldBundle.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def parent_bundle_id(self) -> str:
        """Gets the parent_bundle_id of this FieldBundle.


        :return: The parent_bundle_id of this FieldBundle.
        :rtype: str
        """
        return self._parent_bundle_id

    @parent_bundle_id.setter
    def parent_bundle_id(self, parent_bundle_id: str):
        """Sets the parent_bundle_id of this FieldBundle.


        :param parent_bundle_id: The parent_bundle_id of this FieldBundle.
        :type parent_bundle_id: str
        """

        self._parent_bundle_id = parent_bundle_id

    @property
    def user_id(self) -> str:
        """Gets the user_id of this FieldBundle.


        :return: The user_id of this FieldBundle.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this FieldBundle.


        :param user_id: The user_id of this FieldBundle.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this FieldBundle.


        :return: The workspace_id of this FieldBundle.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this FieldBundle.


        :param workspace_id: The workspace_id of this FieldBundle.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def active(self) -> bool:
        """Gets the active of this FieldBundle.


        :return: The active of this FieldBundle.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this FieldBundle.


        :param active: The active of this FieldBundle.
        :type active: bool
        """

        self._active = active

    @property
    def cached_file(self) -> str:
        """Gets the cached_file of this FieldBundle.


        :return: The cached_file of this FieldBundle.
        :rtype: str
        """
        return self._cached_file

    @cached_file.setter
    def cached_file(self, cached_file: str):
        """Sets the cached_file of this FieldBundle.


        :param cached_file: The cached_file of this FieldBundle.
        :type cached_file: str
        """

        self._cached_file = cached_file

    @property
    def bundle_type(self) -> str:
        """Gets the bundle_type of this FieldBundle.


        :return: The bundle_type of this FieldBundle.
        :rtype: str
        """
        return self._bundle_type

    @bundle_type.setter
    def bundle_type(self, bundle_type: str):
        """Sets the bundle_type of this FieldBundle.


        :param bundle_type: The bundle_type of this FieldBundle.
        :type bundle_type: str
        """

        self._bundle_type = bundle_type

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this FieldBundle.


        :return: The tags of this FieldBundle.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this FieldBundle.


        :param tags: The tags of this FieldBundle.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def field_ids(self) -> List[str]:
        """Gets the field_ids of this FieldBundle.


        :return: The field_ids of this FieldBundle.
        :rtype: List[str]
        """
        return self._field_ids

    @field_ids.setter
    def field_ids(self, field_ids: List[str]):
        """Sets the field_ids of this FieldBundle.


        :param field_ids: The field_ids of this FieldBundle.
        :type field_ids: List[str]
        """

        self._field_ids = field_ids

    @property
    def workspace_filter_ids(self) -> List[str]:
        """Gets the workspace_filter_ids of this FieldBundle.


        :return: The workspace_filter_ids of this FieldBundle.
        :rtype: List[str]
        """
        return self._workspace_filter_ids

    @workspace_filter_ids.setter
    def workspace_filter_ids(self, workspace_filter_ids: List[str]):
        """Sets the workspace_filter_ids of this FieldBundle.


        :param workspace_filter_ids: The workspace_filter_ids of this FieldBundle.
        :type workspace_filter_ids: List[str]
        """

        self._workspace_filter_ids = workspace_filter_ids
