import pprint
import re  # noqa: F401

from server import util
from server.models.base_model_ import Model
from server.models.filter_data_criteria import FilterDataCriteria  # noqa: F401,E501
from server.models.filter_search_criteria import FilterSearchCriteria  # noqa: F401,E501


class WorkspaceFilter(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """

    def __init__(
        self,
        id=None,
        name=None,
        active=True,
        user_id=None,
        workspace_id=None,
        is_user_defined=True,
        is_default=False,
        options=None,
        status=None,
        search_criteria=None,
        data_criteria=None,
        **kwargs,
    ):  # noqa: E501
        """WorkspaceFilter - a model defined in Swagger"""  # noqa: E501

        self.swagger_types = {
            "id": str,
            "name": str,
            "active": bool,
            "user_id": str,
            "workspace_id": str,
            "is_user_defined": bool,
            "is_default": bool,
            "options": object,
            "status": object,
            "search_criteria": FilterSearchCriteria,
            "data_criteria": FilterDataCriteria,
        }

        self.attribute_map = {
            "id": "id",
            "name": "name",
            "active": "active",
            "user_id": "userId",
            "workspace_id": "workspaceId",
            "is_user_defined": "isUserDefined",
            "is_default": "isDefault",
            "options": "options",
            "status": "status",
            "search_criteria": "searchCriteria",
            "data_criteria": "dataCriteria",
        }

        self._id = id
        self._name = name
        self._active = active
        self._user_id = user_id
        self._workspace_id = workspace_id
        self._is_user_defined = is_user_defined
        self._is_default = is_default or False
        self._options = options
        self._status = status
        self._search_criteria = search_criteria
        self._data_criteria = data_criteria

    @classmethod
    def from_dict(cls, dikt) -> "WorkspaceFilter":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorkspaceFilter of this WorkspaceFilter.  # noqa: E501
        :rtype: WorkspaceFilter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this WorkspaceFilter.  # noqa: E501


        :return: The id of this WorkspaceFilter.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this WorkspaceFilter.


        :param id: The id of this WorkspaceFilter.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this WorkspaceFilter.  # noqa: E501


        :return: The name of this WorkspaceFilter.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this WorkspaceFilter.


        :param name: The name of this WorkspaceFilter.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def active(self):
        """Gets the active of this WorkspaceFilter.  # noqa: E501


        :return: The active of this WorkspaceFilter.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this WorkspaceFilter.


        :param active: The active of this WorkspaceFilter.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def user_id(self):
        """Gets the user_id of this WorkspaceFilter.  # noqa: E501


        :return: The user_id of this WorkspaceFilter.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WorkspaceFilter.


        :param user_id: The user_id of this WorkspaceFilter.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def workspace_id(self):
        """Gets the workspace_id of this WorkspaceFilter.  # noqa: E501


        :return: The workspace_id of this WorkspaceFilter.  # noqa: E501
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this WorkspaceFilter.


        :param workspace_id: The workspace_id of this WorkspaceFilter.  # noqa: E501
        :type: str
        """

        self._workspace_id = workspace_id

    @property
    def is_user_defined(self):
        """Gets the is_user_defined of this WorkspaceFilter.  # noqa: E501


        :return: The is_user_defined of this WorkspaceFilter.  # noqa: E501
        :rtype: bool
        """
        return self._is_user_defined

    @is_user_defined.setter
    def is_user_defined(self, is_user_defined):
        """Sets the is_user_defined of this WorkspaceFilter.


        :param is_user_defined: The is_user_defined of this WorkspaceFilter.  # noqa: E501
        :type: bool
        """

        self._is_user_defined = is_user_defined

    @property
    def is_default(self):
        """Gets the is_default of this WorkspaceFilter.  # noqa: E501


        :return: The is_default of this WorkspaceFilter.  # noqa: E501
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this WorkspaceFilter.


        :param is_default: The is_default of this WorkspaceFilter.  # noqa: E501
        :type: bool
        """

        self._is_default = is_default

    @property
    def options(self):
        """Gets the options of this WorkspaceFilter.  # noqa: E501


        :return: The options of this WorkspaceFilter.  # noqa: E501
        :rtype: object
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this WorkspaceFilter.


        :param options: The options of this WorkspaceFilter.  # noqa: E501
        :type: object
        """

        self._options = options

    @property
    def status(self):
        """Gets the status of this WorkspaceFilter.  # noqa: E501


        :return: The status of this WorkspaceFilter.  # noqa: E501
        :rtype: object
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this WorkspaceFilter.


        :param status: The status of this WorkspaceFilter.  # noqa: E501
        :type: object
        """

        self._status = status

    @property
    def search_criteria(self):
        """Gets the search_criteria of this WorkspaceFilter.  # noqa: E501


        :return: The search_criteria of this WorkspaceFilter.  # noqa: E501
        :rtype: FilterSearchCriteria
        """
        return self._search_criteria

    @search_criteria.setter
    def search_criteria(self, search_criteria):
        """Sets the search_criteria of this WorkspaceFilter.


        :param search_criteria: The search_criteria of this WorkspaceFilter.  # noqa: E501
        :type: FilterSearchCriteria
        """

        self._search_criteria = search_criteria

    @property
    def data_criteria(self):
        """Gets the data_criteria of this WorkspaceFilter.  # noqa: E501


        :return: The data_criteria of this WorkspaceFilter.  # noqa: E501
        :rtype: FilterDataCriteria
        """
        return self._data_criteria

    @data_criteria.setter
    def data_criteria(self, data_criteria):
        """Sets the data_criteria of this WorkspaceFilter.


        :param data_criteria: The data_criteria of this WorkspaceFilter.  # noqa: E501
        :type: FilterDataCriteria
        """

        self._data_criteria = data_criteria

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in self.swagger_types.items():
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(
                        lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                        value,
                    ),
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    ),
                )
            else:
                result[attr] = value
        if issubclass(WorkspaceFilter, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WorkspaceFilter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
