# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server.models.field_bundle import FieldBundle  # noqa: F401,E501
from server import util


class FieldBundleContent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, bundle_name: str=None, id: str=None, created_on: datetime=None, parent_bundle_id: str=None, user_id: str=None, workspace_id: str=None, active: bool=None, cached_file: str=None, fields: List=None):  # noqa: E501
        """FieldBundleContent - a model defined in Swagger

        :param bundle_name: The bundle_name of this FieldBundleContent.  # noqa: E501
        :type bundle_name: str
        :param id: The id of this FieldBundleContent.  # noqa: E501
        :type id: str
        :param created_on: The created_on of this FieldBundleContent.  # noqa: E501
        :type created_on: datetime
        :param parent_bundle_id: The parent_bundle_id of this FieldBundleContent.  # noqa: E501
        :type parent_bundle_id: str
        :param user_id: The user_id of this FieldBundleContent.  # noqa: E501
        :type user_id: str
        :param workspace_id: The workspace_id of this FieldBundleContent.  # noqa: E501
        :type workspace_id: str
        :param active: The active of this FieldBundleContent.  # noqa: E501
        :type active: bool
        :param fields: The fields of this FieldBundleContent.  # noqa: E501
        :type fields: List
        """
        self.swagger_types = {
            'bundle_name': str,
            'id': str,
            'created_on': datetime,
            'parent_bundle_id': str,
            'user_id': str,
            'workspace_id': str,
            'active': bool,
            'cached_file': str,
            'fields': List
        }

        self.attribute_map = {
            'bundle_name': 'bundleName',
            'id': 'id',
            'created_on': 'createdOn',
            'parent_bundle_id': 'parentBundleId',
            'user_id': 'userId',
            'workspace_id': 'workspaceId',
            'active': 'active',
            'cached_file': 'cachedFile',
            'fields': 'fields'
        }
        self._bundle_name = bundle_name
        self._id = id
        self._created_on = created_on
        self._parent_bundle_id = parent_bundle_id
        self._user_id = user_id
        self._workspace_id = workspace_id
        self._active = active
        self._fields = fields
        self._cached_file = cached_file

    @classmethod
    def from_dict(cls, dikt) -> 'FieldBundleContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FieldBundleContent of this FieldBundleContent.  # noqa: E501
        :rtype: FieldBundleContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_name(self) -> str:
        """Gets the bundle_name of this FieldBundleContent.


        :return: The bundle_name of this FieldBundleContent.
        :rtype: str
        """
        return self._bundle_name

    @bundle_name.setter
    def bundle_name(self, bundle_name: str):
        """Sets the bundle_name of this FieldBundleContent.


        :param bundle_name: The bundle_name of this FieldBundleContent.
        :type bundle_name: str
        """

        self._bundle_name = bundle_name

    @property
    def id(self) -> str:
        """Gets the id of this FieldBundleContent.


        :return: The id of this FieldBundleContent.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this FieldBundleContent.


        :param id: The id of this FieldBundleContent.
        :type id: str
        """

        self._id = id

    @property
    def created_on(self) -> datetime:
        """Gets the created_on of this FieldBundleContent.


        :return: The created_on of this FieldBundleContent.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on: datetime):
        """Sets the created_on of this FieldBundleContent.


        :param created_on: The created_on of this FieldBundleContent.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def parent_bundle_id(self) -> str:
        """Gets the parent_bundle_id of this FieldBundleContent.


        :return: The parent_bundle_id of this FieldBundleContent.
        :rtype: str
        """
        return self._parent_bundle_id

    @parent_bundle_id.setter
    def parent_bundle_id(self, parent_bundle_id: str):
        """Sets the parent_bundle_id of this FieldBundleContent.


        :param parent_bundle_id: The parent_bundle_id of this FieldBundleContent.
        :type parent_bundle_id: str
        """

        self._parent_bundle_id = parent_bundle_id

    @property
    def user_id(self) -> str:
        """Gets the user_id of this FieldBundleContent.


        :return: The user_id of this FieldBundleContent.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this FieldBundleContent.


        :param user_id: The user_id of this FieldBundleContent.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def workspace_id(self) -> str:
        """Gets the workspace_id of this FieldBundleContent.


        :return: The workspace_id of this FieldBundleContent.
        :rtype: str
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id: str):
        """Sets the workspace_id of this FieldBundleContent.


        :param workspace_id: The workspace_id of this FieldBundleContent.
        :type workspace_id: str
        """

        self._workspace_id = workspace_id

    @property
    def active(self) -> bool:
        """Gets the active of this FieldBundleContent.


        :return: The active of this FieldBundleContent.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this FieldBundleContent.


        :param active: The active of this FieldBundleContent.
        :type active: bool
        """

        self._active = active

    @property
    def cached_file(self) -> str:
        return self._cached_file

    @cached_file.setter
    def cached_file(self, cached_file):
        self._cached_file = cached_file

    @property
    def fields(self) -> List:
        """Gets the fields of this FieldBundleContent.


        :return: The fields of this FieldBundleContent.
        :rtype: List
        """
        return self._fields

    @fields.setter
    def fields(self, fields: List):
        """Sets the fields of this FieldBundleContent.


        :param fields: The fields of this FieldBundleContent.
        :type fields: List
        """

        self._fields = fields
