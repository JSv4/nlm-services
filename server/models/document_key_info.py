from typing import Dict
from typing import List

from server import util
from server.models.base_model_ import Model
from server.models.key_value_pair import KeyValuePair  # noqa: F401,E501
from server.models.section_summary import SectionSummary  # noqa: F401,E501


class DocumentKeyInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        section_summary: List[SectionSummary] = None,
        key_value_pairs: List[KeyValuePair] = None,
        metadata: List[KeyValuePair] = None,
        doc_ent: Dict = None,
        reference_definitions: Dict = None,
        **kw_args,
    ):  # noqa: E501
        """DocumentKeyInfo - a model defined in Swagger

        :param section_summary: The section_summary of this DocumentKeyInfo.  # noqa: E501
        :type section_summary: List[SectionSummary]
        :param key_value_pairs: The key_value_pairs of this DocumentKeyInfo.  # noqa: E501
        :type key_value_pairs: List[KeyValuePair]
        :param metadata: The metadata of this DocumentKeyInfo.  # noqa: E501
        :type metadata: List[KeyValuePair]
        :param doc_ent: The doc_ent of this DocumentKeyInfo.  # noqa: E501
        :type doc_ent: Dict
        :param reference_definitions: The reference_definitions of this DocumentKeyInfo.  # noqa: E501
        :type reference_definitions: Dict
        """
        self.swagger_types = {
            "section_summary": List[SectionSummary],
            "key_value_pairs": List[KeyValuePair],
            "metadata": List[KeyValuePair],
            "doc_ent": Dict,
            "reference_definitions": Dict,
        }

        self.attribute_map = {
            "section_summary": "sectionSummary",
            "key_value_pairs": "keyValuePairs",
            "metadata": "metadata",
            "doc_ent": "docEnt",
            "reference_definitions": "referenceDefinitions",
        }

        self._section_summary = section_summary
        self._key_value_pairs = key_value_pairs
        self._metadata = metadata
        self._doc_ent = doc_ent or {}
        self._reference_definitions = reference_definitions or {}

    @classmethod
    def from_dict(cls, dikt) -> "DocumentKeyInfo":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DocumentKeyInfo of this DocumentKeyInfo.  # noqa: E501
        :rtype: DocumentKeyInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def section_summary(self) -> List[SectionSummary]:
        """Gets the section_summary of this DocumentKeyInfo.


        :return: The section_summary of this DocumentKeyInfo.
        :rtype: List[SectionSummary]
        """
        return self._section_summary

    @section_summary.setter
    def section_summary(self, section_summary: List[SectionSummary]):
        """Sets the section_summary of this DocumentKeyInfo.


        :param section_summary: The section_summary of this DocumentKeyInfo.
        :type section_summary: List[SectionSummary]
        """

        self._section_summary = section_summary

    @property
    def key_value_pairs(self) -> List[KeyValuePair]:
        """Gets the key_value_pairs of this DocumentKeyInfo.


        :return: The key_value_pairs of this DocumentKeyInfo.
        :rtype: List[KeyValuePair]
        """
        return self._key_value_pairs

    @key_value_pairs.setter
    def key_value_pairs(self, key_value_pairs: List[KeyValuePair]):
        """Sets the key_value_pairs of this DocumentKeyInfo.


        :param key_value_pairs: The key_value_pairs of this DocumentKeyInfo.
        :type key_value_pairs: List[KeyValuePair]
        """

        self._key_value_pairs = key_value_pairs

    @property
    def metadata(self) -> List[KeyValuePair]:
        """Gets the metadata of this DocumentKeyInfo.


        :return: The metadata of this DocumentKeyInfo.
        :rtype: List[KeyValuePair]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: List[KeyValuePair]):
        """Sets the metadata of this DocumentKeyInfo.


        :param metadata: The metadata of this DocumentKeyInfo.
        :type metadata: List[KeyValuePair]
        """

        self._metadata = metadata

    @property
    def doc_ent(self) -> Dict:
        """Gets the doc_ent of this DocumentKeyInfo.


        :return: The doc_ent of this DocumentKeyInfo.
        :rtype: Dict
        """
        return self._doc_ent

    @doc_ent.setter
    def doc_ent(self, doc_ent: Dict):
        """Sets the doc_ent of this DocumentKeyInfo.


        :param doc_ent: The doc_ent of this DocumentKeyInfo.
        :type doc_ent: Dict
        """

        self._doc_ent = doc_ent

    @property
    def reference_definitions(self) -> Dict:
        """Gets the reference_definitions of this DocumentKeyInfo.


        :return: The reference_definitions of this DocumentKeyInfo.
        :rtype: Dict
        """
        return self._reference_definitions

    @reference_definitions.setter
    def reference_definitions(self, reference_definitions: Dict):
        """Sets the reference_definitions of this DocumentKeyInfo.


        :param reference_definitions: The doc_ent of this DocumentKeyInfo.
        :type reference_definitions: Dict
        """

        self._reference_definitions = reference_definitions
