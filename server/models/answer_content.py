from server import util
from server.models.answer_summary import AnswerSummary  # noqa: F401,E501
from server.models.base_model_ import Model


class AnswerContent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        content: AnswerSummary = None,
        labels: object = None,
        raw_scores: object = None,
    ):  # noqa: E501
        """AnswerContent - a model defined in Swagger

        :param content: The content of this AnswerContent.  # noqa: E501
        :type content: AnswerSummary
        :param labels: The labels of this AnswerContent.  # noqa: E501
        :type labels: object
        :param raw_scores: The raw_scores of this AnswerContent.  # noqa: E501
        :type raw_scores: object
        """
        self.swagger_types = {
            "content": AnswerSummary,
            "labels": object,
            "raw_scores": object,
        }

        self.attribute_map = {
            "content": "content",
            "labels": "labels",
            "raw_scores": "rawScores",
        }
        self._content = content
        self._labels = labels
        self._raw_scores = raw_scores

    @classmethod
    def from_dict(cls, dikt) -> "AnswerContent":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnswerContent of this AnswerContent.  # noqa: E501
        :rtype: AnswerContent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self) -> AnswerSummary:
        """Gets the content of this AnswerContent.


        :return: The content of this AnswerContent.
        :rtype: AnswerSummary
        """
        return self._content

    @content.setter
    def content(self, content: AnswerSummary):
        """Sets the content of this AnswerContent.


        :param content: The content of this AnswerContent.
        :type content: AnswerSummary
        """

        self._content = content

    @property
    def labels(self) -> object:
        """Gets the labels of this AnswerContent.


        :return: The labels of this AnswerContent.
        :rtype: object
        """
        return self._labels

    @labels.setter
    def labels(self, labels: object):
        """Sets the labels of this AnswerContent.


        :param labels: The labels of this AnswerContent.
        :type labels: object
        """

        self._labels = labels

    @property
    def raw_scores(self) -> object:
        """Gets the raw_scores of this AnswerContent.


        :return: The raw_scores of this AnswerContent.
        :rtype: object
        """
        return self._raw_scores

    @raw_scores.setter
    def raw_scores(self, raw_scores: object):
        """Sets the raw_scores of this AnswerContent.


        :param raw_scores: The raw_scores of this AnswerContent.
        :type raw_scores: object
        """

        self._raw_scores = raw_scores
